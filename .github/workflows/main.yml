jobs:
  x64-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Fetch history for all tags
      run: .github/workflows/fetch-tags
    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -yq build-essential clang-7 cmake coreutils g++-8 gcc libc++-8-dev libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libstdc++-7-dev libvorbis-dev libsqlite3-dev
    - name: Build targets
      run: .github/workflows/build ${{ matrix.build-type }} ${{ matrix.compiler }}
    strategy:
      matrix:
        compiler:
          - clang++
          - clang++-7
          - g++
          - g++-8
        build-type:
          - Debug
          - Release
  x64-mac-os:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Fetch history for all tags
      run: .github/workflows/fetch-tags
    - name: Install mac OS dependencies
      run: brew install bash cmake gcc libvorbis sdl2 sdl2_image sdl2_mixer
    - name: Build targets
      run: .github/workflows/build ${{ matrix.build-type }} ${{ matrix.compiler }}
    strategy:
      matrix:
        compiler:
          - clang++
          - g++
        build-type:
          - Debug
          - Release
  x64-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Fetch history for all tags
      run: .github/workflows/fetch-tags
    - uses: msys2/setup-msys2@v2
    - name: Install dependencies
      run: pacman --needed --noconfirm -S cmake gcc git make mingw-w64-x86_64-{clang,dlfcn,glew,libvorbis,SDL2{,_image,_mixer},sqlite3}
      shell: msys2 {0}
    - name: Build targets
      run: .github/workflows/build ${{ matrix.build-type }} ${{ matrix.compiler }}
      shell: msys2 {0}
    - name: Build artifact tree
      run: |
        mkdir artifacts
        for DLL in $(ldd build/shiromino.exe | grep -v '/c/' | cut -d " " -f 3); do cp $DLL artifacts; done
        mv build/shiromino.exe data LICENSE* README.md shiromino.ini artifacts
      shell: msys2 {0}
    - if: matrix.build-type == 'Release' && matrix.compiler == 'clang++'
      name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: shiromino-windows-x64-${{ github.sha }}
        path: artifacts/*
    strategy:
      matrix:
        build-type:
          - Debug
          - Release
        compiler:
          - clang++
          - g++
  deploy-aur-package:
    if: github.ref == 'refs/heads/master'
    needs:
      - x64-linux
      - x64-mac-os
      - x64-windows
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: textbook/git-checkout-submodule-action@master
    - name: Fetch history for all tags
      run: .github/workflows/fetch-tags
    - run: echo "VERSION=$(git describe --tags | tr - +)" >> $GITHUB_ENV
    - run: sed "s/\$VERSION/${{ env.VERSION }}/g" ./packages/aur/PKGBUILD > PKGBUILD
    - uses: KSXGitHub/github-actions-deploy-aur@v2.2.4
      with:
        commit_email: shiromino+github@aur
        commit_message: Released version ${{ env.VERSION }}
        commit_username: shiromino-bot
        pkgbuild: PKGBUILD
        pkgname: shiromino-git
        ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
  release:
      if: startsWith(github.ref, 'refs/tags/')
      needs:
        - x64-linux
        - x64-mac-os
        - x64-windows
      runs-on: ubuntu-latest
      steps:
        - uses: actions/download-artifact@v2
        - run: echo "VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
        - run: for FILE in *; do mv $FILE ${FILE//-${{ github.sha }}}-$VERSION; done
        - run: for FILE in *; do zip -r $FILE.zip $FILE; done
        - name: Create new release
          uses: ncipollo/release-action@v1
          with:
            allowUpdates: true
            artifactErrorsFailBuild: true
            artifacts: "*.zip"
            token: ${{ secrets.GITHUB_TOKEN }}
name: build
on:
  - pull_request
  - push